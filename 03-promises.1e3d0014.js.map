{"mappings":"YACaA,SAASC,cAAc,SAApC,IACMC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAqCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAGpBG,EAAO,Q,GAER,I,IA9CQV,SAASC,cAAc,UAC/Be,iBAAiB,SACxB,SAAoBC,GAClBA,EAAEC,iBAMF,SAAiBC,EAAOC,EAAMC,GAC5B,KAAoB,GAAeA,EAAOC,MAAtB,EAClBjB,EADkB,EACMc,EAAMG,OAC3BC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALT,MAEjBW,QAAQC,IACN,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,IAKjDI,OAAM,SAAAC,GAAWA,EAARxB,SAAewB,EAALf,MAClBgB,OAAOC,SACJ,SAAAR,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALT,MAEZW,QAAQC,IACN,sBAAqCC,OAAftB,EAAS,QAAYsB,OAANH,EAAM,M,OAQvDN,GAAQC,C,CA7BVa,CACEC,OAAOhC,EAAMoB,OACbY,OAAO/B,EAAKmB,OACZY,OAAO9B,EAAOkB,O","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector(\".form\")\nconst delay = document.querySelector('[name=\"delay\"]')\nconst step = document.querySelector('[name=\"step\"]')\nconst amount = document.querySelector('[name=\"amount\"]')\nconst button = document.querySelector(\"button\")\nbutton.addEventListener(\"click\", startCrPr)\nfunction startCrPr (e)  { \n  e.preventDefalut()\n  getData(\n    Number(delay.value),\n    Number(step.value),\n    Number(amount.value)\n  );\n  function getData(delay, step, amount) { \n    for (let position = 1; position <= amount.value; position + 1) { \n      createPromise(position, delay.value)\n        .then(({ position, delay }) => {\n          // Notify.success(\n          console.log(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          ), {\n            timeout: 3000\n          }\n        })\n        .catch(({ position, delay }) => {\n          Notify.success(\n            (({ position, delay }) => {\n              // Notify.failure(\n              console.log(\n                `❌ Rejected promise ${position} in ${delay}ms`\n              ), {\n                timeout: 3000\n              }\n            }))\n        })\n\n    }\n    delay +=step\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      }\n      else {\n        reject(\"Error\")\n      }\n    }, 2000)\n  })\n}\n  \n  \n  "],"names":["document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefalut","delay1","step1","amount1","value","then","param","_$delay","console","log","concat","catch","param1","Notify","success","getData","Number"],"version":3,"file":"03-promises.1e3d0014.js.map"}
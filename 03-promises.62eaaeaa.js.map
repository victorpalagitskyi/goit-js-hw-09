{"mappings":"AACaA,SAASC,cAAc,SAApC,MACMC,EAAQF,SAASC,cAAc,kBAC/BE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBAqCtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAGpBG,EAAO,QAAQ,GAEhB,IAAK,G,CA9CGV,SAASC,cAAc,UAC/Be,iBAAiB,SACxB,SAAoBC,GAClBA,EAAEC,iBAMF,SAAiBC,EAAOC,EAAMC,GAC5B,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAOE,MAAOD,EAC/CjB,EAAciB,EAAUH,EAAMI,OAC3BC,MAAK,EAAClB,SAAEA,EAAUS,MAAAU,MAEjBC,QAAQC,IACN,uBAAqBrB,QAAiBmB,MAAU,IAKnDG,OAAM,EAAGtB,SAAAuB,EAAUd,MAAAe,MAClBC,OAAOC,SACJ,EAAC1B,SAAEA,EAAUS,MAAAkB,MAEZP,QAAQC,IACN,sBAAoBrB,QAAe2B,MAAU,GAI9C,IAIXd,GAAQC,C,CA7BVc,CACEC,OAAOjC,EAAMqB,OACbY,OAAOhC,EAAKoB,OACZY,OAAO/B,EAAOmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector(\".form\")\nconst delay = document.querySelector('[name=\"delay\"]')\nconst step = document.querySelector('[name=\"step\"]')\nconst amount = document.querySelector('[name=\"amount\"]')\nconst button = document.querySelector(\"button\")\nbutton.addEventListener(\"click\", startCrPr)\nfunction startCrPr (e)  { \n  e.preventDefalut()\n  getData(\n    Number(delay.value),\n    Number(step.value),\n    Number(amount.value)\n  );\n  function getData(delay, step, amount) { \n    for (let position = 1; position <= amount.value; position + 1) { \n      createPromise(position, delay.value)\n        .then(({ position, delay }) => {\n          // Notify.success(\n          console.log(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          ), {\n            timeout: 3000\n          }\n        })\n        .catch(({ position, delay }) => {\n          Notify.success(\n            (({ position, delay }) => {\n              // Notify.failure(\n              console.log(\n                `❌ Rejected promise ${position} in ${delay}ms`\n              ), {\n                timeout: 3000\n              }\n            }))\n        })\n\n    }\n    delay +=step\n  }\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      }\n      else {\n        reject(\"Error\")\n      }\n    }, 2000)\n  })\n}\n  \n  \n  "],"names":["document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay5","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","e","preventDefalut","delay1","step1","amount1","position1","value","then","delay2","console","log","catch","position2","delay3","Notify","success","delay4","getData","Number"],"version":3,"file":"03-promises.62eaaeaa.js.map"}